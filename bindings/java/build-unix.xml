<?xml version="1.0" encoding="windows-1252"?>
<project name="TSKTestTargets">
	<target name="test" 
			description="Performs regression tests."
			depends="compile-test, copyTSKLibs">
		<junit fork="on" haltonfailure="yes" dir=".">
			<sysproperty key="rslt" value="${test-results}"/>
			<sysproperty key="gold" value="${test-standards}"/>
			<sysproperty key="inpt" value="${test-input}"/>
			<classpath refid="libraries" />
			<formatter type="plain" usefile="false" />
			<test name="org.sleuthkit.datamodel.DataModelTestSuite" />
		</junit>
	</target>

	<target name="test-rebuild"
			description="Rebuilds regression tests."
			depends="compile-test, copyTSKLibs">
		<java classname="org.sleuthkit.datamodel.DataModelTestSuite" classpathref="libraries"	fork="true" failonerror="true">
			<sysproperty key="gold" value="${test-standards}"/>
			<sysproperty key="inpt" value="${test-input}"/>
			<sysproperty key="types" value="${test-types}"/>
		</java>
	</target>


    <target name="testTSKLibs">
        <property environment="env"/>
        <available file="./jni/.libs/libtsk_jni.dylib" property="tsk_dylib.present"/>
        <available file="./jni/.libs/libtsk_jni.so" property="tsk_so.present"/>
		<available file="./jni/.libs/libtsk_jni.a" property="present"/>
		<fail unless="present" message="Run make install on The Sleuthkit."/>
    </target>

    <!-- OS X -->
    <target name="copyTskLibs_dylib" depends="testTSKLibs" if="tsk_dylib.present">
        <property environment="env"/>
        <copy file="./jni/.libs/libtsk_jni.dylib" tofile="./libtsk_jni.jnilib"/>
    </target>
	
	<target name="copyMacLibs" depends="testTSKLibs" if="tsk_dylib.present">
        <property environment="env"/>
		<property name="jni.dylib" location="${basedir}/jni/.libs/libtsk_jni.dylib" />
		<property name="jni.jnilib" value="libtsk_jni.jnilib" />
		<property name="mac.zlib" location="/usr/lib/libz.dylib"/>
		<property name="mac.libewf" location="${env.LIBEWF_HOME}/libewf/.libs/libewf.dylib"/>
        <copy file="${jni.dylib}" tofile="${x86_64}/mac/${jni.jnilib}"/>
		<copy file="${mac.libewf}" tofile="${x86_64}/mac/libewf.dylib"/>
		<copy file="${mac.zlib}" tofile="${x86_64}/mac/zlib.dylib"/>
    </target>

    <!-- Non-OS X -->
    <target name="copyTskLibs_so" depends="testTSKLibs" if="tsk_so.present">
        <property environment="env"/>
        <copy file="./jni/.libs/libtsk_jni.so" tofile="./libtsk_jni.so"/>
    </target>
	
	<target name="copyUnixLibs" depends="testTSKLibs" if="tsk_so.present">
		<property environment="env"/>
		<property name="jni.so" location="${basedir}/jni/.libs/libtsk_jni.so" />
		<!-- check that this location is correct -->
		<property name="unix.zlib" location="/usr/lib/libz.so"/>
		<property name="zlib.so" value="zlib.so"/>
		<property name="unix.libewf" location="${env.LIBEWF_HOME}/libewf/.libs/libewf.so"/>
		<property name="libewf.so" value="libewf.so"/>
		<!-- x86_64 -->
		<copy file="${jni.so}" tofile="${x86_64}/unix/libtsk_jni.so"/>
		<copy file="${unix.zlib}" tofile="${x86_64}/unix/${zlib.so}"/>
		<copy file="${unix.libewf}" tofile="${x86_64}/unix/${libewf.so}"/>
		<!-- amd64 -->
		<copy file="${jni.so}" tofile="${amd64}/unix/libtsk_jni.so"/>
		<copy file="${unix.zlib}" tofile="${amd64}/unix/${zlib.so}"/>
		<copy file="${unix.libewf}" tofile="${amd64}/unix/${libewf.so}"/>
		<!-- x86 -->
		<copy file="${jni.so}" tofile="${x86}/unix/libtsk_jni.so"/>
		<copy file="${unix.zlib}" tofile="${x86}/unix/${zlib.so}"/>
		<copy file="${unix.libewf}" tofile="${x86}/unix/${libewf.so}"/>
		<!-- i386 -->
		<copy file="${jni.so}" tofile="${i386}/unix/libtsk_jni.so"/>
		<copy file="${unix.zlib}" tofile="${i386}/unix/${zlib.so}"/>
		<copy file="${unix.libewf}" tofile="${i386}/unix/${libewf.so}"/>
		<!-- i586 -->
		<copy file="${jni.so}" tofile="${i586}/unix/libtsk_jni.so"/>
		<copy file="${unix.zlib}" tofile="${i586}/unix/${zlib.so}"/>
		<copy file="${unix.libewf}" tofile="${i586}/unix/${libewf.so}"/>
	</target>

	<target name="copyLibs" depends="copyUnixLibs,copyMacLibs" />
	
    <target name="copyTSKLibs" depends="copyTskLibs_so,copyTskLibs_dylib">
        <!-- depends targets take care of the actual copying since the file differs on OS X and Linux -->
        <!-- This assumes that TSK, libewf, and zlib have been installed on the system and those libraries will be with normal loading approaches -->
    </target>
</project>
